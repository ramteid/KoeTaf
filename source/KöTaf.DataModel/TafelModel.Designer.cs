//------------------------------------------------------------------------------
// <auto-generated>
//    Dieser Code wurde aus einer Vorlage generiert.
//
//    Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten Ihrer Anwendung.
//    Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM-Beziehungsmetadaten

[assembly: EdmRelationshipAttribute("TafelModel", "PersonTitle", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Person), "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.Title))]
[assembly: EdmRelationshipAttribute("TafelModel", "PersonChild", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.Person), "Child", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Child))]
[assembly: EdmRelationshipAttribute("TafelModel", "TeamTitle", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Team), "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.Title))]
[assembly: EdmRelationshipAttribute("TafelModel", "TeamFunctionTeam", "TeamFunction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.TeamFunction), "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Team))]
[assembly: EdmRelationshipAttribute("TafelModel", "FundingTypeSponsor", "FundingType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.FundingType), "Sponsor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Sponsor))]
[assembly: EdmRelationshipAttribute("TafelModel", "TitleSponsor", "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.Title), "Sponsor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Sponsor))]
[assembly: EdmRelationshipAttribute("TafelModel", "AdditionalRecordAccount", "AdditionalRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Booking), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.Account))]
[assembly: EdmRelationshipAttribute("TafelModel", "FamilyStatePerson", "FamilyState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.FamilyState), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Person))]
[assembly: EdmRelationshipAttribute("TafelModel", "TitlePerson", "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KöTaf.DataModel.Title), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Person))]
[assembly: EdmRelationshipAttribute("TafelModel", "FormletterPatternFilterSet", "FormletterPattern", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KöTaf.DataModel.FormletterPattern), "FilterSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.FilterSet))]
[assembly: EdmRelationshipAttribute("TafelModel", "FilterSetFilter", "FilterSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.FilterSet), "Filter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Filter))]
[assembly: EdmRelationshipAttribute("TafelModel", "FormletterPatternColumnAssignment", "FormletterPattern", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.FormletterPattern), "ColumnAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.ColumnAssignment))]
[assembly: EdmRelationshipAttribute("TafelModel", "UserAccountPerson", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KöTaf.DataModel.UserAccount), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Person))]
[assembly: EdmRelationshipAttribute("TafelModel", "RevenueTypeEntität1", "RevenueType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.RevenueType), "Entität1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Revenue))]
[assembly: EdmRelationshipAttribute("TafelModel", "PersonEntität1", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.Person), "Entität1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Revenue))]
[assembly: EdmRelationshipAttribute("TafelModel", "AccountBooking", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.Account), "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Booking))]
[assembly: EdmRelationshipAttribute("TafelModel", "UserAccountBooking", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KöTaf.DataModel.UserAccount), "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Booking))]
[assembly: EdmRelationshipAttribute("TafelModel", "UserAccountCashClosure", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.UserAccount), "CashClosure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.CashClosure))]
[assembly: EdmRelationshipAttribute("TafelModel", "CashClosureCashClosureReport", "CashClosure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.CashClosure), "CashClosureReport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.CashClosureReport))]
[assembly: EdmRelationshipAttribute("TafelModel", "UserAccountCashClosureReport", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KöTaf.DataModel.UserAccount), "CashClosureReport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.CashClosureReport))]
[assembly: EdmRelationshipAttribute("TafelModel", "UserAccountCashClosureReport1", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KöTaf.DataModel.UserAccount), "CashClosureReport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.CashClosureReport))]
[assembly: EdmRelationshipAttribute("TafelModel", "CashClosureCashClosureReceipt", "CashClosure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KöTaf.DataModel.CashClosure), "CashClosureReceipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.CashClosureReceipt))]
[assembly: EdmRelationshipAttribute("TafelModel", "UserAccountCashClosureReceipt", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KöTaf.DataModel.UserAccount), "CashClosureReceipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.CashClosureReceipt))]
[assembly: EdmRelationshipAttribute("TafelModel", "PersonBooking", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(KöTaf.DataModel.Person), "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KöTaf.DataModel.Booking))]

#endregion

namespace KöTaf.DataModel
{
    #region Kontexte
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    public partial class TafelModelContainer : ObjectContext
    {
        #region Konstruktoren
    
        /// <summary>
        /// Initialisiert ein neues TafelModelContainer-Objekt mithilfe der in Abschnitt 'TafelModelContainer' der Anwendungskonfigurationsdatei gefundenen Verbindungszeichenfolge.
        /// </summary>
        public TafelModelContainer() : base("name=TafelModelContainer", "TafelModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues TafelModelContainer-Objekt.
        /// </summary>
        public TafelModelContainer(string connectionString) : base(connectionString, "TafelModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues TafelModelContainer-Objekt.
        /// </summary>
        public TafelModelContainer(EntityConnection connection) : base(connection, "TafelModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partielle Methoden
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet-Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Person> Persons
        {
            get
            {
                if ((_Persons == null))
                {
                    _Persons = base.CreateObjectSet<Person>("Persons");
                }
                return _Persons;
            }
        }
        private ObjectSet<Person> _Persons;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Title> Titles
        {
            get
            {
                if ((_Titles == null))
                {
                    _Titles = base.CreateObjectSet<Title>("Titles");
                }
                return _Titles;
            }
        }
        private ObjectSet<Title> _Titles;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<FamilyState> FamilyStates
        {
            get
            {
                if ((_FamilyStates == null))
                {
                    _FamilyStates = base.CreateObjectSet<FamilyState>("FamilyStates");
                }
                return _FamilyStates;
            }
        }
        private ObjectSet<FamilyState> _FamilyStates;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<TeamFunction> TeamFunctions
        {
            get
            {
                if ((_TeamFunctions == null))
                {
                    _TeamFunctions = base.CreateObjectSet<TeamFunction>("TeamFunctions");
                }
                return _TeamFunctions;
            }
        }
        private ObjectSet<TeamFunction> _TeamFunctions;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Booking> Bookings
        {
            get
            {
                if ((_Bookings == null))
                {
                    _Bookings = base.CreateObjectSet<Booking>("Bookings");
                }
                return _Bookings;
            }
        }
        private ObjectSet<Booking> _Bookings;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<RevenueType> RevenueTypes
        {
            get
            {
                if ((_RevenueTypes == null))
                {
                    _RevenueTypes = base.CreateObjectSet<RevenueType>("RevenueTypes");
                }
                return _RevenueTypes;
            }
        }
        private ObjectSet<RevenueType> _RevenueTypes;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<UserAccount> UserAccounts
        {
            get
            {
                if ((_UserAccounts == null))
                {
                    _UserAccounts = base.CreateObjectSet<UserAccount>("UserAccounts");
                }
                return _UserAccounts;
            }
        }
        private ObjectSet<UserAccount> _UserAccounts;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Child> Children
        {
            get
            {
                if ((_Children == null))
                {
                    _Children = base.CreateObjectSet<Child>("Children");
                }
                return _Children;
            }
        }
        private ObjectSet<Child> _Children;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Sponsor> Sponsors
        {
            get
            {
                if ((_Sponsors == null))
                {
                    _Sponsors = base.CreateObjectSet<Sponsor>("Sponsors");
                }
                return _Sponsors;
            }
        }
        private ObjectSet<Sponsor> _Sponsors;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<FundingType> FundingTypes
        {
            get
            {
                if ((_FundingTypes == null))
                {
                    _FundingTypes = base.CreateObjectSet<FundingType>("FundingTypes");
                }
                return _FundingTypes;
            }
        }
        private ObjectSet<FundingType> _FundingTypes;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Note> Notes
        {
            get
            {
                if ((_Notes == null))
                {
                    _Notes = base.CreateObjectSet<Note>("Notes");
                }
                return _Notes;
            }
        }
        private ObjectSet<Note> _Notes;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Filter> Filters
        {
            get
            {
                if ((_Filters == null))
                {
                    _Filters = base.CreateObjectSet<Filter>("Filters");
                }
                return _Filters;
            }
        }
        private ObjectSet<Filter> _Filters;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<FilterSet> FilterSets
        {
            get
            {
                if ((_FilterSets == null))
                {
                    _FilterSets = base.CreateObjectSet<FilterSet>("FilterSets");
                }
                return _FilterSets;
            }
        }
        private ObjectSet<FilterSet> _FilterSets;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<FormletterPattern> FormletterPatterns
        {
            get
            {
                if ((_FormletterPatterns == null))
                {
                    _FormletterPatterns = base.CreateObjectSet<FormletterPattern>("FormletterPatterns");
                }
                return _FormletterPatterns;
            }
        }
        private ObjectSet<FormletterPattern> _FormletterPatterns;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<ColumnAssignment> ColumnAssignments
        {
            get
            {
                if ((_ColumnAssignments == null))
                {
                    _ColumnAssignments = base.CreateObjectSet<ColumnAssignment>("ColumnAssignments");
                }
                return _ColumnAssignments;
            }
        }
        private ObjectSet<ColumnAssignment> _ColumnAssignments;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Revenue> Revenues
        {
            get
            {
                if ((_Revenues == null))
                {
                    _Revenues = base.CreateObjectSet<Revenue>("Revenues");
                }
                return _Revenues;
            }
        }
        private ObjectSet<Revenue> _Revenues;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<CashClosure> CashClosures
        {
            get
            {
                if ((_CashClosures == null))
                {
                    _CashClosures = base.CreateObjectSet<CashClosure>("CashClosures");
                }
                return _CashClosures;
            }
        }
        private ObjectSet<CashClosure> _CashClosures;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<CashClosureReport> CashClosureReports
        {
            get
            {
                if ((_CashClosureReports == null))
                {
                    _CashClosureReports = base.CreateObjectSet<CashClosureReport>("CashClosureReports");
                }
                return _CashClosureReports;
            }
        }
        private ObjectSet<CashClosureReport> _CashClosureReports;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<CashClosureReceipt> CashClosureReceipts
        {
            get
            {
                if ((_CashClosureReceipts == null))
                {
                    _CashClosureReceipts = base.CreateObjectSet<CashClosureReceipt>("CashClosureReceipts");
                }
                return _CashClosureReceipts;
            }
        }
        private ObjectSet<CashClosureReceipt> _CashClosureReceipts;

        #endregion
        #region AddTo-Methoden
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Persons'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToPersons(Person person)
        {
            base.AddObject("Persons", person);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Titles'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToTitles(Title title)
        {
            base.AddObject("Titles", title);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'FamilyStates'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToFamilyStates(FamilyState familyState)
        {
            base.AddObject("FamilyStates", familyState);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Teams'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'TeamFunctions'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToTeamFunctions(TeamFunction teamFunction)
        {
            base.AddObject("TeamFunctions", teamFunction);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Bookings'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToBookings(Booking booking)
        {
            base.AddObject("Bookings", booking);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'RevenueTypes'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToRevenueTypes(RevenueType revenueType)
        {
            base.AddObject("RevenueTypes", revenueType);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'UserAccounts'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToUserAccounts(UserAccount userAccount)
        {
            base.AddObject("UserAccounts", userAccount);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Children'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToChildren(Child child)
        {
            base.AddObject("Children", child);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Sponsors'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToSponsors(Sponsor sponsor)
        {
            base.AddObject("Sponsors", sponsor);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'FundingTypes'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToFundingTypes(FundingType fundingType)
        {
            base.AddObject("FundingTypes", fundingType);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Notes'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToNotes(Note note)
        {
            base.AddObject("Notes", note);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Accounts'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Filters'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToFilters(Filter filter)
        {
            base.AddObject("Filters", filter);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'FilterSets'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToFilterSets(FilterSet filterSet)
        {
            base.AddObject("FilterSets", filterSet);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'FormletterPatterns'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToFormletterPatterns(FormletterPattern formletterPattern)
        {
            base.AddObject("FormletterPatterns", formletterPattern);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'ColumnAssignments'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToColumnAssignments(ColumnAssignment columnAssignment)
        {
            base.AddObject("ColumnAssignments", columnAssignment);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Revenues'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToRevenues(Revenue revenue)
        {
            base.AddObject("Revenues", revenue);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'CashClosures'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToCashClosures(CashClosure cashClosure)
        {
            base.AddObject("CashClosures", cashClosure);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'CashClosureReports'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToCashClosureReports(CashClosureReport cashClosureReport)
        {
            base.AddObject("CashClosureReports", cashClosureReport);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'CashClosureReceipts'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToCashClosureReceipts(CashClosureReceipt cashClosureReceipt)
        {
            base.AddObject("CashClosureReceipts", cashClosureReceipt);
        }

        #endregion
    }
    

    #endregion
    
    #region Entitäten
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Account-Objekt.
        /// </summary>
        /// <param name="accountID">Anfangswert der Eigenschaft AccountID.</param>
        /// <param name="name">Anfangswert der Eigenschaft Name.</param>
        /// <param name="number">Anfangswert der Eigenschaft Number.</param>
        /// <param name="isOfficial">Anfangswert der Eigenschaft IsOfficial.</param>
        /// <param name="zeroPeriod">Anfangswert der Eigenschaft ZeroPeriod.</param>
        /// <param name="latestBalance">Anfangswert der Eigenschaft LatestBalance.</param>
        /// <param name="isFixed">Anfangswert der Eigenschaft IsFixed.</param>
        /// <param name="isCapital">Anfangswert der Eigenschaft IsCapital.</param>
        public static Account CreateAccount(global::System.Int32 accountID, global::System.String name, global::System.Int32 number, global::System.Boolean isOfficial, global::System.Int32 zeroPeriod, global::System.Double latestBalance, global::System.Boolean isFixed, global::System.Boolean isCapital)
        {
            Account account = new Account();
            account.AccountID = accountID;
            account.Name = name;
            account.Number = number;
            account.IsOfficial = isOfficial;
            account.ZeroPeriod = zeroPeriod;
            account.LatestBalance = latestBalance;
            account.IsFixed = isFixed;
            account.IsCapital = isCapital;
            return account;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOfficial
        {
            get
            {
                return _IsOfficial;
            }
            set
            {
                OnIsOfficialChanging(value);
                ReportPropertyChanging("IsOfficial");
                _IsOfficial = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOfficial");
                OnIsOfficialChanged();
            }
        }
        private global::System.Boolean _IsOfficial;
        partial void OnIsOfficialChanging(global::System.Boolean value);
        partial void OnIsOfficialChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZeroPeriod
        {
            get
            {
                return _ZeroPeriod;
            }
            set
            {
                OnZeroPeriodChanging(value);
                ReportPropertyChanging("ZeroPeriod");
                _ZeroPeriod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZeroPeriod");
                OnZeroPeriodChanged();
            }
        }
        private global::System.Int32 _ZeroPeriod;
        partial void OnZeroPeriodChanging(global::System.Int32 value);
        partial void OnZeroPeriodChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LatestBalance
        {
            get
            {
                return _LatestBalance;
            }
            set
            {
                OnLatestBalanceChanging(value);
                ReportPropertyChanging("LatestBalance");
                _LatestBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatestBalance");
                OnLatestBalanceChanged();
            }
        }
        private global::System.Double _LatestBalance;
        partial void OnLatestBalanceChanging(global::System.Double value);
        partial void OnLatestBalanceChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFixed
        {
            get
            {
                return _IsFixed;
            }
            set
            {
                OnIsFixedChanging(value);
                ReportPropertyChanging("IsFixed");
                _IsFixed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFixed");
                OnIsFixedChanged();
            }
        }
        private global::System.Boolean _IsFixed;
        partial void OnIsFixedChanging(global::System.Boolean value);
        partial void OnIsFixedChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCapital
        {
            get
            {
                return _IsCapital;
            }
            set
            {
                OnIsCapitalChanging(value);
                ReportPropertyChanging("IsCapital");
                _IsCapital = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCapital");
                OnIsCapitalChanged();
            }
        }
        private global::System.Boolean _IsCapital;
        partial void OnIsCapitalChanging(global::System.Boolean value);
        partial void OnIsCapitalChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "AccountBooking", "Booking")]
        public EntityCollection<Booking> Booking
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Booking>("TafelModel.AccountBooking", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Booking>("TafelModel.AccountBooking", "Booking", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="Booking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Booking : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Booking-Objekt.
        /// </summary>
        /// <param name="bookingID">Anfangswert der Eigenschaft BookingID.</param>
        /// <param name="amount">Anfangswert der Eigenschaft Amount.</param>
        /// <param name="date">Anfangswert der Eigenschaft Date.</param>
        /// <param name="isCorrection">Anfangswert der Eigenschaft IsCorrection.</param>
        public static Booking CreateBooking(global::System.Int32 bookingID, global::System.Double amount, global::System.DateTime date, global::System.Boolean isCorrection)
        {
            Booking booking = new Booking();
            booking.BookingID = bookingID;
            booking.Amount = amount;
            booking.Date = date;
            booking.IsCorrection = isCorrection;
            return booking;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingID
        {
            get
            {
                return _BookingID;
            }
            set
            {
                if (_BookingID != value)
                {
                    OnBookingIDChanging(value);
                    ReportPropertyChanging("BookingID");
                    _BookingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BookingID");
                    OnBookingIDChanged();
                }
            }
        }
        private global::System.Int32 _BookingID;
        partial void OnBookingIDChanging(global::System.Int32 value);
        partial void OnBookingIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCorrection
        {
            get
            {
                return _IsCorrection;
            }
            set
            {
                OnIsCorrectionChanging(value);
                ReportPropertyChanging("IsCorrection");
                _IsCorrection = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCorrection");
                OnIsCorrectionChanged();
            }
        }
        private global::System.Boolean _IsCorrection;
        partial void OnIsCorrectionChanging(global::System.Boolean value);
        partial void OnIsCorrectionChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "AdditionalRecordAccount", "Account")]
        public Account SourceAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("TafelModel.AdditionalRecordAccount", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("TafelModel.AdditionalRecordAccount", "Account").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> SourceAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("TafelModel.AdditionalRecordAccount", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("TafelModel.AdditionalRecordAccount", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "AccountBooking", "Account")]
        public Account TargetAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("TafelModel.AccountBooking", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("TafelModel.AccountBooking", "Account").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> TargetAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("TafelModel.AccountBooking", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("TafelModel.AccountBooking", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "UserAccountBooking", "UserAccount")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountBooking", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountBooking", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountBooking", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("TafelModel.UserAccountBooking", "UserAccount", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "PersonBooking", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TafelModel.PersonBooking", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TafelModel.PersonBooking", "Person").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TafelModel.PersonBooking", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("TafelModel.PersonBooking", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="CashClosure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CashClosure : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues CashClosure-Objekt.
        /// </summary>
        /// <param name="cashClosureID">Anfangswert der Eigenschaft CashClosureID.</param>
        /// <param name="closureDate">Anfangswert der Eigenschaft ClosureDate.</param>
        /// <param name="sum">Anfangswert der Eigenschaft Sum.</param>
        /// <param name="revenue">Anfangswert der Eigenschaft Revenue.</param>
        /// <param name="expense">Anfangswert der Eigenschaft Expense.</param>
        public static CashClosure CreateCashClosure(global::System.Int32 cashClosureID, global::System.DateTime closureDate, global::System.Double sum, global::System.Double revenue, global::System.Double expense)
        {
            CashClosure cashClosure = new CashClosure();
            cashClosure.CashClosureID = cashClosureID;
            cashClosure.ClosureDate = closureDate;
            cashClosure.Sum = sum;
            cashClosure.Revenue = revenue;
            cashClosure.Expense = expense;
            return cashClosure;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CashClosureID
        {
            get
            {
                return _CashClosureID;
            }
            set
            {
                if (_CashClosureID != value)
                {
                    OnCashClosureIDChanging(value);
                    ReportPropertyChanging("CashClosureID");
                    _CashClosureID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CashClosureID");
                    OnCashClosureIDChanged();
                }
            }
        }
        private global::System.Int32 _CashClosureID;
        partial void OnCashClosureIDChanging(global::System.Int32 value);
        partial void OnCashClosureIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ClosureDate
        {
            get
            {
                return _ClosureDate;
            }
            set
            {
                OnClosureDateChanging(value);
                ReportPropertyChanging("ClosureDate");
                _ClosureDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClosureDate");
                OnClosureDateChanged();
            }
        }
        private global::System.DateTime _ClosureDate;
        partial void OnClosureDateChanging(global::System.DateTime value);
        partial void OnClosureDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Sum
        {
            get
            {
                return _Sum;
            }
            set
            {
                OnSumChanging(value);
                ReportPropertyChanging("Sum");
                _Sum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sum");
                OnSumChanged();
            }
        }
        private global::System.Double _Sum;
        partial void OnSumChanging(global::System.Double value);
        partial void OnSumChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Revenue
        {
            get
            {
                return _Revenue;
            }
            set
            {
                OnRevenueChanging(value);
                ReportPropertyChanging("Revenue");
                _Revenue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Revenue");
                OnRevenueChanged();
            }
        }
        private global::System.Double _Revenue;
        partial void OnRevenueChanging(global::System.Double value);
        partial void OnRevenueChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Expense
        {
            get
            {
                return _Expense;
            }
            set
            {
                OnExpenseChanging(value);
                ReportPropertyChanging("Expense");
                _Expense = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Expense");
                OnExpenseChanged();
            }
        }
        private global::System.Double _Expense;
        partial void OnExpenseChanging(global::System.Double value);
        partial void OnExpenseChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "UserAccountCashClosure", "UserAccount")]
        public UserAccount ClosureUserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountCashClosure", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountCashClosure", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> ClosureUserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountCashClosure", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("TafelModel.UserAccountCashClosure", "UserAccount", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "CashClosureCashClosureReport", "CashClosureReport")]
        public EntityCollection<CashClosureReport> CashClosureReport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CashClosureReport>("TafelModel.CashClosureCashClosureReport", "CashClosureReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CashClosureReport>("TafelModel.CashClosureCashClosureReport", "CashClosureReport", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "CashClosureCashClosureReceipt", "CashClosureReceipt")]
        public EntityCollection<CashClosureReceipt> CashClosureReceipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CashClosureReceipt>("TafelModel.CashClosureCashClosureReceipt", "CashClosureReceipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CashClosureReceipt>("TafelModel.CashClosureCashClosureReceipt", "CashClosureReceipt", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="CashClosureReceipt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CashClosureReceipt : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues CashClosureReceipt-Objekt.
        /// </summary>
        /// <param name="cashClosureReceiptID">Anfangswert der Eigenschaft CashClosureReceiptID.</param>
        /// <param name="printDone">Anfangswert der Eigenschaft PrintDone.</param>
        public static CashClosureReceipt CreateCashClosureReceipt(global::System.Int32 cashClosureReceiptID, global::System.Boolean printDone)
        {
            CashClosureReceipt cashClosureReceipt = new CashClosureReceipt();
            cashClosureReceipt.CashClosureReceiptID = cashClosureReceiptID;
            cashClosureReceipt.PrintDone = printDone;
            return cashClosureReceipt;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CashClosureReceiptID
        {
            get
            {
                return _CashClosureReceiptID;
            }
            set
            {
                if (_CashClosureReceiptID != value)
                {
                    OnCashClosureReceiptIDChanging(value);
                    ReportPropertyChanging("CashClosureReceiptID");
                    _CashClosureReceiptID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CashClosureReceiptID");
                    OnCashClosureReceiptIDChanged();
                }
            }
        }
        private global::System.Int32 _CashClosureReceiptID;
        partial void OnCashClosureReceiptIDChanging(global::System.Int32 value);
        partial void OnCashClosureReceiptIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PrintDone
        {
            get
            {
                return _PrintDone;
            }
            set
            {
                OnPrintDoneChanging(value);
                ReportPropertyChanging("PrintDone");
                _PrintDone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrintDone");
                OnPrintDoneChanged();
            }
        }
        private global::System.Boolean _PrintDone;
        partial void OnPrintDoneChanging(global::System.Boolean value);
        partial void OnPrintDoneChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PrintDate
        {
            get
            {
                return _PrintDate;
            }
            set
            {
                OnPrintDateChanging(value);
                ReportPropertyChanging("PrintDate");
                _PrintDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrintDate");
                OnPrintDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PrintDate;
        partial void OnPrintDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPrintDateChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "CashClosureCashClosureReceipt", "CashClosure")]
        public CashClosure CashClosure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashClosure>("TafelModel.CashClosureCashClosureReceipt", "CashClosure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashClosure>("TafelModel.CashClosureCashClosureReceipt", "CashClosure").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CashClosure> CashClosureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashClosure>("TafelModel.CashClosureCashClosureReceipt", "CashClosure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CashClosure>("TafelModel.CashClosureCashClosureReceipt", "CashClosure", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "UserAccountCashClosureReceipt", "UserAccount")]
        public UserAccount PrintUserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountCashClosureReceipt", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountCashClosureReceipt", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> PrintUserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountCashClosureReceipt", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("TafelModel.UserAccountCashClosureReceipt", "UserAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="CashClosureReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CashClosureReport : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues CashClosureReport-Objekt.
        /// </summary>
        /// <param name="cashClosureReportID">Anfangswert der Eigenschaft CashClosureReportID.</param>
        /// <param name="printDone">Anfangswert der Eigenschaft PrintDone.</param>
        /// <param name="done">Anfangswert der Eigenschaft Done.</param>
        public static CashClosureReport CreateCashClosureReport(global::System.Int32 cashClosureReportID, global::System.Boolean printDone, global::System.Boolean done)
        {
            CashClosureReport cashClosureReport = new CashClosureReport();
            cashClosureReport.CashClosureReportID = cashClosureReportID;
            cashClosureReport.PrintDone = printDone;
            cashClosureReport.Done = done;
            return cashClosureReport;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CashClosureReportID
        {
            get
            {
                return _CashClosureReportID;
            }
            set
            {
                if (_CashClosureReportID != value)
                {
                    OnCashClosureReportIDChanging(value);
                    ReportPropertyChanging("CashClosureReportID");
                    _CashClosureReportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CashClosureReportID");
                    OnCashClosureReportIDChanged();
                }
            }
        }
        private global::System.Int32 _CashClosureReportID;
        partial void OnCashClosureReportIDChanging(global::System.Int32 value);
        partial void OnCashClosureReportIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PrintDone
        {
            get
            {
                return _PrintDone;
            }
            set
            {
                OnPrintDoneChanging(value);
                ReportPropertyChanging("PrintDone");
                _PrintDone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrintDone");
                OnPrintDoneChanged();
            }
        }
        private global::System.Boolean _PrintDone;
        partial void OnPrintDoneChanging(global::System.Boolean value);
        partial void OnPrintDoneChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PrintDate
        {
            get
            {
                return _PrintDate;
            }
            set
            {
                OnPrintDateChanging(value);
                ReportPropertyChanging("PrintDate");
                _PrintDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrintDate");
                OnPrintDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PrintDate;
        partial void OnPrintDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPrintDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Done
        {
            get
            {
                return _Done;
            }
            set
            {
                OnDoneChanging(value);
                ReportPropertyChanging("Done");
                _Done = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Done");
                OnDoneChanged();
            }
        }
        private global::System.Boolean _Done;
        partial void OnDoneChanging(global::System.Boolean value);
        partial void OnDoneChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DoneDate
        {
            get
            {
                return _DoneDate;
            }
            set
            {
                OnDoneDateChanging(value);
                ReportPropertyChanging("DoneDate");
                _DoneDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoneDate");
                OnDoneDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DoneDate;
        partial void OnDoneDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDoneDateChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "CashClosureCashClosureReport", "CashClosure")]
        public CashClosure CashClosure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashClosure>("TafelModel.CashClosureCashClosureReport", "CashClosure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashClosure>("TafelModel.CashClosureCashClosureReport", "CashClosure").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CashClosure> CashClosureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashClosure>("TafelModel.CashClosureCashClosureReport", "CashClosure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CashClosure>("TafelModel.CashClosureCashClosureReport", "CashClosure", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "UserAccountCashClosureReport", "UserAccount")]
        public UserAccount PrintUserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountCashClosureReport", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountCashClosureReport", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> PrintUserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountCashClosureReport", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("TafelModel.UserAccountCashClosureReport", "UserAccount", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "UserAccountCashClosureReport1", "UserAccount")]
        public UserAccount DoneUserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountCashClosureReport1", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountCashClosureReport1", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> DoneUserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountCashClosureReport1", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("TafelModel.UserAccountCashClosureReport1", "UserAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="Child")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Child : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Child-Objekt.
        /// </summary>
        /// <param name="childID">Anfangswert der Eigenschaft ChildID.</param>
        /// <param name="firstName">Anfangswert der Eigenschaft FirstName.</param>
        /// <param name="lastName">Anfangswert der Eigenschaft LastName.</param>
        /// <param name="dateOfBirth">Anfangswert der Eigenschaft DateOfBirth.</param>
        public static Child CreateChild(global::System.Int32 childID, global::System.String firstName, global::System.String lastName, global::System.DateTime dateOfBirth)
        {
            Child child = new Child();
            child.ChildID = childID;
            child.FirstName = firstName;
            child.LastName = lastName;
            child.DateOfBirth = dateOfBirth;
            return child;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChildID
        {
            get
            {
                return _ChildID;
            }
            set
            {
                if (_ChildID != value)
                {
                    OnChildIDChanging(value);
                    ReportPropertyChanging("ChildID");
                    _ChildID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChildID");
                    OnChildIDChanged();
                }
            }
        }
        private global::System.Int32 _ChildID;
        partial void OnChildIDChanging(global::System.Int32 value);
        partial void OnChildIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFemale
        {
            get
            {
                return _IsFemale;
            }
            set
            {
                OnIsFemaleChanging(value);
                ReportPropertyChanging("IsFemale");
                _IsFemale = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFemale");
                OnIsFemaleChanged();
            }
        }
        private global::System.Boolean _IsFemale = false;
        partial void OnIsFemaleChanging(global::System.Boolean value);
        partial void OnIsFemaleChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModified;
        partial void OnLastModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "PersonChild", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TafelModel.PersonChild", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TafelModel.PersonChild", "Person").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TafelModel.PersonChild", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("TafelModel.PersonChild", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="ColumnAssignment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ColumnAssignment : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues ColumnAssignment-Objekt.
        /// </summary>
        /// <param name="columnAssignmentID">Anfangswert der Eigenschaft ColumnAssignmentID.</param>
        /// <param name="csvColumn">Anfangswert der Eigenschaft CsvColumn.</param>
        /// <param name="databaseTable">Anfangswert der Eigenschaft DatabaseTable.</param>
        /// <param name="databaseColumn">Anfangswert der Eigenschaft DatabaseColumn.</param>
        public static ColumnAssignment CreateColumnAssignment(global::System.Int32 columnAssignmentID, global::System.String csvColumn, global::System.String databaseTable, global::System.String databaseColumn)
        {
            ColumnAssignment columnAssignment = new ColumnAssignment();
            columnAssignment.ColumnAssignmentID = columnAssignmentID;
            columnAssignment.CsvColumn = csvColumn;
            columnAssignment.DatabaseTable = databaseTable;
            columnAssignment.DatabaseColumn = databaseColumn;
            return columnAssignment;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColumnAssignmentID
        {
            get
            {
                return _ColumnAssignmentID;
            }
            set
            {
                if (_ColumnAssignmentID != value)
                {
                    OnColumnAssignmentIDChanging(value);
                    ReportPropertyChanging("ColumnAssignmentID");
                    _ColumnAssignmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ColumnAssignmentID");
                    OnColumnAssignmentIDChanged();
                }
            }
        }
        private global::System.Int32 _ColumnAssignmentID;
        partial void OnColumnAssignmentIDChanging(global::System.Int32 value);
        partial void OnColumnAssignmentIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CsvColumn
        {
            get
            {
                return _CsvColumn;
            }
            set
            {
                OnCsvColumnChanging(value);
                ReportPropertyChanging("CsvColumn");
                _CsvColumn = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CsvColumn");
                OnCsvColumnChanged();
            }
        }
        private global::System.String _CsvColumn;
        partial void OnCsvColumnChanging(global::System.String value);
        partial void OnCsvColumnChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DatabaseTable
        {
            get
            {
                return _DatabaseTable;
            }
            set
            {
                OnDatabaseTableChanging(value);
                ReportPropertyChanging("DatabaseTable");
                _DatabaseTable = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DatabaseTable");
                OnDatabaseTableChanged();
            }
        }
        private global::System.String _DatabaseTable;
        partial void OnDatabaseTableChanging(global::System.String value);
        partial void OnDatabaseTableChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DatabaseColumn
        {
            get
            {
                return _DatabaseColumn;
            }
            set
            {
                OnDatabaseColumnChanging(value);
                ReportPropertyChanging("DatabaseColumn");
                _DatabaseColumn = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DatabaseColumn");
                OnDatabaseColumnChanged();
            }
        }
        private global::System.String _DatabaseColumn;
        partial void OnDatabaseColumnChanging(global::System.String value);
        partial void OnDatabaseColumnChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "FormletterPatternColumnAssignment", "FormletterPattern")]
        public FormletterPattern FormletterPattern
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormletterPattern>("TafelModel.FormletterPatternColumnAssignment", "FormletterPattern").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormletterPattern>("TafelModel.FormletterPatternColumnAssignment", "FormletterPattern").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormletterPattern> FormletterPatternReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormletterPattern>("TafelModel.FormletterPatternColumnAssignment", "FormletterPattern");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormletterPattern>("TafelModel.FormletterPatternColumnAssignment", "FormletterPattern", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="FamilyState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FamilyState : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues FamilyState-Objekt.
        /// </summary>
        /// <param name="familyStateID">Anfangswert der Eigenschaft FamilyStateID.</param>
        /// <param name="name">Anfangswert der Eigenschaft Name.</param>
        /// <param name="shortName">Anfangswert der Eigenschaft ShortName.</param>
        public static FamilyState CreateFamilyState(global::System.Int32 familyStateID, global::System.String name, global::System.String shortName)
        {
            FamilyState familyState = new FamilyState();
            familyState.FamilyStateID = familyStateID;
            familyState.Name = name;
            familyState.ShortName = shortName;
            return familyState;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FamilyStateID
        {
            get
            {
                return _FamilyStateID;
            }
            set
            {
                if (_FamilyStateID != value)
                {
                    OnFamilyStateIDChanging(value);
                    ReportPropertyChanging("FamilyStateID");
                    _FamilyStateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FamilyStateID");
                    OnFamilyStateIDChanged();
                }
            }
        }
        private global::System.Int32 _FamilyStateID;
        partial void OnFamilyStateIDChanging(global::System.Int32 value);
        partial void OnFamilyStateIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfPerson
        {
            get
            {
                return _NumberOfPerson;
            }
            set
            {
                OnNumberOfPersonChanging(value);
                ReportPropertyChanging("NumberOfPerson");
                _NumberOfPerson = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfPerson");
                OnNumberOfPersonChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfPerson;
        partial void OnNumberOfPersonChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfPersonChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "FamilyStatePerson", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("TafelModel.FamilyStatePerson", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("TafelModel.FamilyStatePerson", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="Filter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Filter : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Filter-Objekt.
        /// </summary>
        /// <param name="filterID">Anfangswert der Eigenschaft FilterID.</param>
        /// <param name="table">Anfangswert der Eigenschaft Table.</param>
        /// <param name="type">Anfangswert der Eigenschaft Type.</param>
        /// <param name="operation">Anfangswert der Eigenschaft Operation.</param>
        /// <param name="value">Anfangswert der Eigenschaft Value.</param>
        public static Filter CreateFilter(global::System.Int32 filterID, global::System.String table, global::System.String type, global::System.String operation, global::System.String value)
        {
            Filter filter = new Filter();
            filter.FilterID = filterID;
            filter.Table = table;
            filter.Type = type;
            filter.Operation = operation;
            filter.Value = value;
            return filter;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FilterID
        {
            get
            {
                return _FilterID;
            }
            set
            {
                if (_FilterID != value)
                {
                    OnFilterIDChanging(value);
                    ReportPropertyChanging("FilterID");
                    _FilterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FilterID");
                    OnFilterIDChanged();
                }
            }
        }
        private global::System.Int32 _FilterID;
        partial void OnFilterIDChanging(global::System.Int32 value);
        partial void OnFilterIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Table
        {
            get
            {
                return _Table;
            }
            set
            {
                OnTableChanging(value);
                ReportPropertyChanging("Table");
                _Table = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Table");
                OnTableChanged();
            }
        }
        private global::System.String _Table;
        partial void OnTableChanging(global::System.String value);
        partial void OnTableChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.String _Operation;
        partial void OnOperationChanging(global::System.String value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "FilterSetFilter", "FilterSet")]
        public FilterSet FilterSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilterSet>("TafelModel.FilterSetFilter", "FilterSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilterSet>("TafelModel.FilterSetFilter", "FilterSet").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FilterSet> FilterSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilterSet>("TafelModel.FilterSetFilter", "FilterSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FilterSet>("TafelModel.FilterSetFilter", "FilterSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="FilterSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilterSet : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues FilterSet-Objekt.
        /// </summary>
        /// <param name="filterSetID">Anfangswert der Eigenschaft FilterSetID.</param>
        /// <param name="name">Anfangswert der Eigenschaft Name.</param>
        /// <param name="linking">Anfangswert der Eigenschaft Linking.</param>
        public static FilterSet CreateFilterSet(global::System.Int32 filterSetID, global::System.String name, global::System.String linking)
        {
            FilterSet filterSet = new FilterSet();
            filterSet.FilterSetID = filterSetID;
            filterSet.Name = name;
            filterSet.Linking = linking;
            return filterSet;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FilterSetID
        {
            get
            {
                return _FilterSetID;
            }
            set
            {
                if (_FilterSetID != value)
                {
                    OnFilterSetIDChanging(value);
                    ReportPropertyChanging("FilterSetID");
                    _FilterSetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FilterSetID");
                    OnFilterSetIDChanged();
                }
            }
        }
        private global::System.Int32 _FilterSetID;
        partial void OnFilterSetIDChanging(global::System.Int32 value);
        partial void OnFilterSetIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Linking
        {
            get
            {
                return _Linking;
            }
            set
            {
                OnLinkingChanging(value);
                ReportPropertyChanging("Linking");
                _Linking = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Linking");
                OnLinkingChanged();
            }
        }
        private global::System.String _Linking;
        partial void OnLinkingChanging(global::System.String value);
        partial void OnLinkingChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "FormletterPatternFilterSet", "FormletterPattern")]
        public FormletterPattern FormletterPattern
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormletterPattern>("TafelModel.FormletterPatternFilterSet", "FormletterPattern").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormletterPattern>("TafelModel.FormletterPatternFilterSet", "FormletterPattern").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormletterPattern> FormletterPatternReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormletterPattern>("TafelModel.FormletterPatternFilterSet", "FormletterPattern");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormletterPattern>("TafelModel.FormletterPatternFilterSet", "FormletterPattern", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "FilterSetFilter", "Filter")]
        public EntityCollection<Filter> Filter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Filter>("TafelModel.FilterSetFilter", "Filter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Filter>("TafelModel.FilterSetFilter", "Filter", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="FormletterPattern")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormletterPattern : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues FormletterPattern-Objekt.
        /// </summary>
        /// <param name="formletterPatternID">Anfangswert der Eigenschaft FormletterPatternID.</param>
        /// <param name="name">Anfangswert der Eigenschaft Name.</param>
        /// <param name="saluationM">Anfangswert der Eigenschaft SaluationM.</param>
        /// <param name="saluationF">Anfangswert der Eigenschaft SaluationF.</param>
        /// <param name="saluationNT">Anfangswert der Eigenschaft SaluationNT.</param>
        /// <param name="fileName">Anfangswert der Eigenschaft FileName.</param>
        /// <param name="text">Anfangswert der Eigenschaft Text.</param>
        public static FormletterPattern CreateFormletterPattern(global::System.Int32 formletterPatternID, global::System.String name, global::System.String saluationM, global::System.String saluationF, global::System.String saluationNT, global::System.String fileName, global::System.String text)
        {
            FormletterPattern formletterPattern = new FormletterPattern();
            formletterPattern.FormletterPatternID = formletterPatternID;
            formletterPattern.Name = name;
            formletterPattern.SaluationM = saluationM;
            formletterPattern.SaluationF = saluationF;
            formletterPattern.SaluationNT = saluationNT;
            formletterPattern.FileName = fileName;
            formletterPattern.Text = text;
            return formletterPattern;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormletterPatternID
        {
            get
            {
                return _FormletterPatternID;
            }
            set
            {
                if (_FormletterPatternID != value)
                {
                    OnFormletterPatternIDChanging(value);
                    ReportPropertyChanging("FormletterPatternID");
                    _FormletterPatternID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FormletterPatternID");
                    OnFormletterPatternIDChanged();
                }
            }
        }
        private global::System.Int32 _FormletterPatternID;
        partial void OnFormletterPatternIDChanging(global::System.Int32 value);
        partial void OnFormletterPatternIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SaluationM
        {
            get
            {
                return _SaluationM;
            }
            set
            {
                OnSaluationMChanging(value);
                ReportPropertyChanging("SaluationM");
                _SaluationM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SaluationM");
                OnSaluationMChanged();
            }
        }
        private global::System.String _SaluationM;
        partial void OnSaluationMChanging(global::System.String value);
        partial void OnSaluationMChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SaluationF
        {
            get
            {
                return _SaluationF;
            }
            set
            {
                OnSaluationFChanging(value);
                ReportPropertyChanging("SaluationF");
                _SaluationF = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SaluationF");
                OnSaluationFChanged();
            }
        }
        private global::System.String _SaluationF;
        partial void OnSaluationFChanging(global::System.String value);
        partial void OnSaluationFChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SaluationNT
        {
            get
            {
                return _SaluationNT;
            }
            set
            {
                OnSaluationNTChanging(value);
                ReportPropertyChanging("SaluationNT");
                _SaluationNT = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SaluationNT");
                OnSaluationNTChanged();
            }
        }
        private global::System.String _SaluationNT;
        partial void OnSaluationNTChanging(global::System.String value);
        partial void OnSaluationNTChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "FormletterPatternFilterSet", "FilterSet")]
        public EntityCollection<FilterSet> FilterSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FilterSet>("TafelModel.FormletterPatternFilterSet", "FilterSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FilterSet>("TafelModel.FormletterPatternFilterSet", "FilterSet", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "FormletterPatternColumnAssignment", "ColumnAssignment")]
        public EntityCollection<ColumnAssignment> ColumnAssignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ColumnAssignment>("TafelModel.FormletterPatternColumnAssignment", "ColumnAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ColumnAssignment>("TafelModel.FormletterPatternColumnAssignment", "ColumnAssignment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="FundingType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundingType : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues FundingType-Objekt.
        /// </summary>
        /// <param name="fundingTypeID">Anfangswert der Eigenschaft FundingTypeID.</param>
        /// <param name="name">Anfangswert der Eigenschaft Name.</param>
        public static FundingType CreateFundingType(global::System.Int32 fundingTypeID, global::System.String name)
        {
            FundingType fundingType = new FundingType();
            fundingType.FundingTypeID = fundingTypeID;
            fundingType.Name = name;
            return fundingType;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingTypeID
        {
            get
            {
                return _FundingTypeID;
            }
            set
            {
                if (_FundingTypeID != value)
                {
                    OnFundingTypeIDChanging(value);
                    ReportPropertyChanging("FundingTypeID");
                    _FundingTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundingTypeID");
                    OnFundingTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _FundingTypeID;
        partial void OnFundingTypeIDChanging(global::System.Int32 value);
        partial void OnFundingTypeIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "FundingTypeSponsor", "Sponsor")]
        public EntityCollection<Sponsor> Sponsor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sponsor>("TafelModel.FundingTypeSponsor", "Sponsor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sponsor>("TafelModel.FundingTypeSponsor", "Sponsor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="Note")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Note : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Note-Objekt.
        /// </summary>
        /// <param name="noteID">Anfangswert der Eigenschaft NoteID.</param>
        /// <param name="name">Anfangswert der Eigenschaft Name.</param>
        /// <param name="description">Anfangswert der Eigenschaft Description.</param>
        /// <param name="creationDate">Anfangswert der Eigenschaft CreationDate.</param>
        public static Note CreateNote(global::System.Int32 noteID, global::System.String name, global::System.String description, global::System.DateTime creationDate)
        {
            Note note = new Note();
            note.NoteID = noteID;
            note.Name = name;
            note.Description = description;
            note.CreationDate = creationDate;
            return note;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoteID
        {
            get
            {
                return _NoteID;
            }
            set
            {
                if (_NoteID != value)
                {
                    OnNoteIDChanging(value);
                    ReportPropertyChanging("NoteID");
                    _NoteID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NoteID");
                    OnNoteIDChanged();
                }
            }
        }
        private global::System.Int32 _NoteID;
        partial void OnNoteIDChanging(global::System.Int32 value);
        partial void OnNoteIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Person-Objekt.
        /// </summary>
        /// <param name="personID">Anfangswert der Eigenschaft PersonID.</param>
        /// <param name="firstName">Anfangswert der Eigenschaft FirstName.</param>
        /// <param name="lastName">Anfangswert der Eigenschaft LastName.</param>
        /// <param name="street">Anfangswert der Eigenschaft Street.</param>
        /// <param name="nationality">Anfangswert der Eigenschaft Nationality.</param>
        /// <param name="dateOfBirth">Anfangswert der Eigenschaft DateOfBirth.</param>
        /// <param name="isActive">Anfangswert der Eigenschaft IsActive.</param>
        /// <param name="group">Anfangswert der Eigenschaft Group.</param>
        /// <param name="zipCode">Anfangswert der Eigenschaft ZipCode.</param>
        /// <param name="validityStart">Anfangswert der Eigenschaft ValidityStart.</param>
        /// <param name="validityEnd">Anfangswert der Eigenschaft ValidityEnd.</param>
        /// <param name="creationDate">Anfangswert der Eigenschaft CreationDate.</param>
        /// <param name="city">Anfangswert der Eigenschaft City.</param>
        public static Person CreatePerson(global::System.Int32 personID, global::System.String firstName, global::System.String lastName, global::System.String street, global::System.String nationality, global::System.DateTime dateOfBirth, global::System.Boolean isActive, global::System.Int32 group, global::System.Int32 zipCode, global::System.DateTime validityStart, global::System.DateTime validityEnd, global::System.DateTime creationDate, global::System.String city)
        {
            Person person = new Person();
            person.PersonID = personID;
            person.FirstName = firstName;
            person.LastName = lastName;
            person.Street = street;
            person.Nationality = nationality;
            person.DateOfBirth = dateOfBirth;
            person.IsActive = isActive;
            person.Group = group;
            person.ZipCode = zipCode;
            person.ValidityStart = validityStart;
            person.ValidityEnd = validityEnd;
            person.CreationDate = creationDate;
            person.City = city;
            return person;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nationality
        {
            get
            {
                return _Nationality;
            }
            set
            {
                OnNationalityChanging(value);
                ReportPropertyChanging("Nationality");
                _Nationality = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nationality");
                OnNationalityChanged();
            }
        }
        private global::System.String _Nationality;
        partial void OnNationalityChanging(global::System.String value);
        partial void OnNationalityChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryOfBirth
        {
            get
            {
                return _CountryOfBirth;
            }
            set
            {
                OnCountryOfBirthChanging(value);
                ReportPropertyChanging("CountryOfBirth");
                _CountryOfBirth = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryOfBirth");
                OnCountryOfBirthChanged();
            }
        }
        private global::System.String _CountryOfBirth;
        partial void OnCountryOfBirthChanging(global::System.String value);
        partial void OnCountryOfBirthChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Group
        {
            get
            {
                return _Group;
            }
            set
            {
                OnGroupChanging(value);
                ReportPropertyChanging("Group");
                _Group = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Group");
                OnGroupChanged();
            }
        }
        private global::System.Int32 _Group;
        partial void OnGroupChanging(global::System.Int32 value);
        partial void OnGroupChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.Int32 _ZipCode;
        partial void OnZipCodeChanging(global::System.Int32 value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidityStart
        {
            get
            {
                return _ValidityStart;
            }
            set
            {
                OnValidityStartChanging(value);
                ReportPropertyChanging("ValidityStart");
                _ValidityStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidityStart");
                OnValidityStartChanged();
            }
        }
        private global::System.DateTime _ValidityStart;
        partial void OnValidityStartChanging(global::System.DateTime value);
        partial void OnValidityStartChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidityEnd
        {
            get
            {
                return _ValidityEnd;
            }
            set
            {
                OnValidityEndChanging(value);
                ReportPropertyChanging("ValidityEnd");
                _ValidityEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidityEnd");
                OnValidityEndChanged();
            }
        }
        private global::System.DateTime _ValidityEnd;
        partial void OnValidityEndChanging(global::System.DateTime value);
        partial void OnValidityEndChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileNo
        {
            get
            {
                return _MobileNo;
            }
            set
            {
                OnMobileNoChanging(value);
                ReportPropertyChanging("MobileNo");
                _MobileNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileNo");
                OnMobileNoChanged();
            }
        }
        private global::System.String _MobileNo;
        partial void OnMobileNoChanging(global::System.String value);
        partial void OnMobileNoChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaritalFirstName
        {
            get
            {
                return _MaritalFirstName;
            }
            set
            {
                OnMaritalFirstNameChanging(value);
                ReportPropertyChanging("MaritalFirstName");
                _MaritalFirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaritalFirstName");
                OnMaritalFirstNameChanged();
            }
        }
        private global::System.String _MaritalFirstName;
        partial void OnMaritalFirstNameChanging(global::System.String value);
        partial void OnMaritalFirstNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaritalLastName
        {
            get
            {
                return _MaritalLastName;
            }
            set
            {
                OnMaritalLastNameChanging(value);
                ReportPropertyChanging("MaritalLastName");
                _MaritalLastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaritalLastName");
                OnMaritalLastNameChanged();
            }
        }
        private global::System.String _MaritalLastName;
        partial void OnMaritalLastNameChanging(global::System.String value);
        partial void OnMaritalLastNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MaritalBirthday
        {
            get
            {
                return _MaritalBirthday;
            }
            set
            {
                OnMaritalBirthdayChanging(value);
                ReportPropertyChanging("MaritalBirthday");
                _MaritalBirthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaritalBirthday");
                OnMaritalBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _MaritalBirthday;
        partial void OnMaritalBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnMaritalBirthdayChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaritalNationality
        {
            get
            {
                return _MaritalNationality;
            }
            set
            {
                OnMaritalNationalityChanging(value);
                ReportPropertyChanging("MaritalNationality");
                _MaritalNationality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaritalNationality");
                OnMaritalNationalityChanged();
            }
        }
        private global::System.String _MaritalNationality;
        partial void OnMaritalNationalityChanging(global::System.String value);
        partial void OnMaritalNationalityChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPurchase
        {
            get
            {
                return _LastPurchase;
            }
            set
            {
                OnLastPurchaseChanging(value);
                ReportPropertyChanging("LastPurchase");
                _LastPurchase = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPurchase");
                OnLastPurchaseChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPurchase;
        partial void OnLastPurchaseChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPurchaseChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModified;
        partial void OnLastModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TableNo
        {
            get
            {
                return _TableNo;
            }
            set
            {
                OnTableNoChanging(value);
                ReportPropertyChanging("TableNo");
                _TableNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TableNo");
                OnTableNoChanged();
            }
        }
        private Nullable<global::System.Int32> _TableNo;
        partial void OnTableNoChanging(Nullable<global::System.Int32> value);
        partial void OnTableNoChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaritalCountryOfBirth
        {
            get
            {
                return _MaritalCountryOfBirth;
            }
            set
            {
                OnMaritalCountryOfBirthChanging(value);
                ReportPropertyChanging("MaritalCountryOfBirth");
                _MaritalCountryOfBirth = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaritalCountryOfBirth");
                OnMaritalCountryOfBirthChanged();
            }
        }
        private global::System.String _MaritalCountryOfBirth;
        partial void OnMaritalCountryOfBirthChanging(global::System.String value);
        partial void OnMaritalCountryOfBirthChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaritalMobile
        {
            get
            {
                return _MaritalMobile;
            }
            set
            {
                OnMaritalMobileChanging(value);
                ReportPropertyChanging("MaritalMobile");
                _MaritalMobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaritalMobile");
                OnMaritalMobileChanged();
            }
        }
        private global::System.String _MaritalMobile;
        partial void OnMaritalMobileChanging(global::System.String value);
        partial void OnMaritalMobileChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaritalPhone
        {
            get
            {
                return _MaritalPhone;
            }
            set
            {
                OnMaritalPhoneChanging(value);
                ReportPropertyChanging("MaritalPhone");
                _MaritalPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaritalPhone");
                OnMaritalPhoneChanged();
            }
        }
        private global::System.String _MaritalPhone;
        partial void OnMaritalPhoneChanging(global::System.String value);
        partial void OnMaritalPhoneChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaritalEmail
        {
            get
            {
                return _MaritalEmail;
            }
            set
            {
                OnMaritalEmailChanging(value);
                ReportPropertyChanging("MaritalEmail");
                _MaritalEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaritalEmail");
                OnMaritalEmailChanged();
            }
        }
        private global::System.String _MaritalEmail;
        partial void OnMaritalEmailChanging(global::System.String value);
        partial void OnMaritalEmailChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "PersonTitle", "Title")]
        public Title Title
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TafelModel.PersonTitle", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TafelModel.PersonTitle", "Title").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> TitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TafelModel.PersonTitle", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("TafelModel.PersonTitle", "Title", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "PersonChild", "Child")]
        public EntityCollection<Child> Child
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Child>("TafelModel.PersonChild", "Child");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Child>("TafelModel.PersonChild", "Child", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "FamilyStatePerson", "FamilyState")]
        public FamilyState FamilyState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FamilyState>("TafelModel.FamilyStatePerson", "FamilyState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FamilyState>("TafelModel.FamilyStatePerson", "FamilyState").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FamilyState> FamilyStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FamilyState>("TafelModel.FamilyStatePerson", "FamilyState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FamilyState>("TafelModel.FamilyStatePerson", "FamilyState", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "TitlePerson", "Title")]
        public Title MaritalTitle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TafelModel.TitlePerson", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TafelModel.TitlePerson", "Title").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> MaritalTitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TafelModel.TitlePerson", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("TafelModel.TitlePerson", "Title", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "UserAccountPerson", "UserAccount")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountPerson", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountPerson", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("TafelModel.UserAccountPerson", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("TafelModel.UserAccountPerson", "UserAccount", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "PersonBooking", "Booking")]
        public EntityCollection<Booking> Booking
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Booking>("TafelModel.PersonBooking", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Booking>("TafelModel.PersonBooking", "Booking", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="Revenue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Revenue : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Revenue-Objekt.
        /// </summary>
        /// <param name="revenueID">Anfangswert der Eigenschaft RevenueID.</param>
        /// <param name="amount">Anfangswert der Eigenschaft Amount.</param>
        /// <param name="startDate">Anfangswert der Eigenschaft StartDate.</param>
        public static Revenue CreateRevenue(global::System.Int32 revenueID, global::System.Double amount, global::System.DateTime startDate)
        {
            Revenue revenue = new Revenue();
            revenue.RevenueID = revenueID;
            revenue.Amount = amount;
            revenue.StartDate = startDate;
            return revenue;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RevenueID
        {
            get
            {
                return _RevenueID;
            }
            set
            {
                if (_RevenueID != value)
                {
                    OnRevenueIDChanging(value);
                    ReportPropertyChanging("RevenueID");
                    _RevenueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RevenueID");
                    OnRevenueIDChanged();
                }
            }
        }
        private global::System.Int32 _RevenueID;
        partial void OnRevenueIDChanging(global::System.Int32 value);
        partial void OnRevenueIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "RevenueTypeEntität1", "RevenueType")]
        public RevenueType RevenueType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RevenueType>("TafelModel.RevenueTypeEntität1", "RevenueType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RevenueType>("TafelModel.RevenueTypeEntität1", "RevenueType").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RevenueType> RevenueTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RevenueType>("TafelModel.RevenueTypeEntität1", "RevenueType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RevenueType>("TafelModel.RevenueTypeEntität1", "RevenueType", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "PersonEntität1", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TafelModel.PersonEntität1", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TafelModel.PersonEntität1", "Person").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("TafelModel.PersonEntität1", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("TafelModel.PersonEntität1", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="RevenueType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RevenueType : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues RevenueType-Objekt.
        /// </summary>
        /// <param name="revenueTypeID">Anfangswert der Eigenschaft RevenueTypeID.</param>
        /// <param name="name">Anfangswert der Eigenschaft Name.</param>
        public static RevenueType CreateRevenueType(global::System.Int32 revenueTypeID, global::System.String name)
        {
            RevenueType revenueType = new RevenueType();
            revenueType.RevenueTypeID = revenueTypeID;
            revenueType.Name = name;
            return revenueType;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RevenueTypeID
        {
            get
            {
                return _RevenueTypeID;
            }
            set
            {
                if (_RevenueTypeID != value)
                {
                    OnRevenueTypeIDChanging(value);
                    ReportPropertyChanging("RevenueTypeID");
                    _RevenueTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RevenueTypeID");
                    OnRevenueTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _RevenueTypeID;
        partial void OnRevenueTypeIDChanging(global::System.Int32 value);
        partial void OnRevenueTypeIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "RevenueTypeEntität1", "Entität1")]
        public EntityCollection<Revenue> Entität1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Revenue>("TafelModel.RevenueTypeEntität1", "Entität1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Revenue>("TafelModel.RevenueTypeEntität1", "Entität1", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="Sponsor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sponsor : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Sponsor-Objekt.
        /// </summary>
        /// <param name="sponsorID">Anfangswert der Eigenschaft SponsorID.</param>
        /// <param name="isActive">Anfangswert der Eigenschaft IsActive.</param>
        /// <param name="street">Anfangswert der Eigenschaft Street.</param>
        /// <param name="city">Anfangswert der Eigenschaft City.</param>
        /// <param name="zipCode">Anfangswert der Eigenschaft ZipCode.</param>
        /// <param name="firstName">Anfangswert der Eigenschaft FirstName.</param>
        /// <param name="lastName">Anfangswert der Eigenschaft LastName.</param>
        /// <param name="isCompany">Anfangswert der Eigenschaft IsCompany.</param>
        public static Sponsor CreateSponsor(global::System.Int32 sponsorID, global::System.Boolean isActive, global::System.String street, global::System.String city, global::System.Int32 zipCode, global::System.String firstName, global::System.String lastName, global::System.Boolean isCompany)
        {
            Sponsor sponsor = new Sponsor();
            sponsor.SponsorID = sponsorID;
            sponsor.IsActive = isActive;
            sponsor.Street = street;
            sponsor.City = city;
            sponsor.ZipCode = zipCode;
            sponsor.FirstName = firstName;
            sponsor.LastName = lastName;
            sponsor.IsCompany = isCompany;
            return sponsor;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SponsorID
        {
            get
            {
                return _SponsorID;
            }
            set
            {
                if (_SponsorID != value)
                {
                    OnSponsorIDChanging(value);
                    ReportPropertyChanging("SponsorID");
                    _SponsorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SponsorID");
                    OnSponsorIDChanged();
                }
            }
        }
        private global::System.Int32 _SponsorID;
        partial void OnSponsorIDChanging(global::System.Int32 value);
        partial void OnSponsorIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.Int32 _ZipCode;
        partial void OnZipCodeChanging(global::System.Int32 value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileNo
        {
            get
            {
                return _MobileNo;
            }
            set
            {
                OnMobileNoChanging(value);
                ReportPropertyChanging("MobileNo");
                _MobileNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileNo");
                OnMobileNoChanged();
            }
        }
        private global::System.String _MobileNo;
        partial void OnMobileNoChanging(global::System.String value);
        partial void OnMobileNoChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNo
        {
            get
            {
                return _PhoneNo;
            }
            set
            {
                OnPhoneNoChanging(value);
                ReportPropertyChanging("PhoneNo");
                _PhoneNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNo");
                OnPhoneNoChanged();
            }
        }
        private global::System.String _PhoneNo;
        partial void OnPhoneNoChanging(global::System.String value);
        partial void OnPhoneNoChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FaxNo
        {
            get
            {
                return _FaxNo;
            }
            set
            {
                OnFaxNoChanging(value);
                ReportPropertyChanging("FaxNo");
                _FaxNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FaxNo");
                OnFaxNoChanged();
            }
        }
        private global::System.String _FaxNo;
        partial void OnFaxNoChanging(global::System.String value);
        partial void OnFaxNoChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactPerson
        {
            get
            {
                return _ContactPerson;
            }
            set
            {
                OnContactPersonChanging(value);
                ReportPropertyChanging("ContactPerson");
                _ContactPerson = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactPerson");
                OnContactPersonChanged();
            }
        }
        private global::System.String _ContactPerson;
        partial void OnContactPersonChanging(global::System.String value);
        partial void OnContactPersonChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFormLetterAllowed
        {
            get
            {
                return _IsFormLetterAllowed;
            }
            set
            {
                OnIsFormLetterAllowedChanging(value);
                ReportPropertyChanging("IsFormLetterAllowed");
                _IsFormLetterAllowed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFormLetterAllowed");
                OnIsFormLetterAllowedChanged();
            }
        }
        private global::System.Boolean _IsFormLetterAllowed = true;
        partial void OnIsFormLetterAllowedChanging(global::System.Boolean value);
        partial void OnIsFormLetterAllowedChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModified;
        partial void OnLastModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCompany
        {
            get
            {
                return _IsCompany;
            }
            set
            {
                OnIsCompanyChanging(value);
                ReportPropertyChanging("IsCompany");
                _IsCompany = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCompany");
                OnIsCompanyChanged();
            }
        }
        private global::System.Boolean _IsCompany;
        partial void OnIsCompanyChanging(global::System.Boolean value);
        partial void OnIsCompanyChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "FundingTypeSponsor", "FundingType")]
        public FundingType FundingType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingType>("TafelModel.FundingTypeSponsor", "FundingType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingType>("TafelModel.FundingTypeSponsor", "FundingType").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingType> FundingTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingType>("TafelModel.FundingTypeSponsor", "FundingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingType>("TafelModel.FundingTypeSponsor", "FundingType", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "TitleSponsor", "Title")]
        public Title Title
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TafelModel.TitleSponsor", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TafelModel.TitleSponsor", "Title").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> TitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TafelModel.TitleSponsor", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("TafelModel.TitleSponsor", "Title", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Team-Objekt.
        /// </summary>
        /// <param name="teamID">Anfangswert der Eigenschaft TeamID.</param>
        /// <param name="firstName">Anfangswert der Eigenschaft FirstName.</param>
        /// <param name="lastName">Anfangswert der Eigenschaft LastName.</param>
        /// <param name="isActive">Anfangswert der Eigenschaft IsActive.</param>
        /// <param name="street">Anfangswert der Eigenschaft Street.</param>
        /// <param name="zipCode">Anfangswert der Eigenschaft ZipCode.</param>
        /// <param name="city">Anfangswert der Eigenschaft City.</param>
        /// <param name="isFormLetterAllowed">Anfangswert der Eigenschaft IsFormLetterAllowed.</param>
        /// <param name="dateOfBirth">Anfangswert der Eigenschaft DateOfBirth.</param>
        public static Team CreateTeam(global::System.Int32 teamID, global::System.String firstName, global::System.String lastName, global::System.Boolean isActive, global::System.String street, global::System.Int32 zipCode, global::System.String city, global::System.Boolean isFormLetterAllowed, global::System.DateTime dateOfBirth)
        {
            Team team = new Team();
            team.TeamID = teamID;
            team.FirstName = firstName;
            team.LastName = lastName;
            team.IsActive = isActive;
            team.Street = street;
            team.ZipCode = zipCode;
            team.City = city;
            team.IsFormLetterAllowed = isFormLetterAllowed;
            team.DateOfBirth = dateOfBirth;
            return team;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                if (_TeamID != value)
                {
                    OnTeamIDChanging(value);
                    ReportPropertyChanging("TeamID");
                    _TeamID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeamID");
                    OnTeamIDChanged();
                }
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.Int32 _ZipCode;
        partial void OnZipCodeChanging(global::System.Int32 value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileNo
        {
            get
            {
                return _MobileNo;
            }
            set
            {
                OnMobileNoChanging(value);
                ReportPropertyChanging("MobileNo");
                _MobileNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileNo");
                OnMobileNoChanged();
            }
        }
        private global::System.String _MobileNo;
        partial void OnMobileNoChanging(global::System.String value);
        partial void OnMobileNoChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNo
        {
            get
            {
                return _PhoneNo;
            }
            set
            {
                OnPhoneNoChanging(value);
                ReportPropertyChanging("PhoneNo");
                _PhoneNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNo");
                OnPhoneNoChanged();
            }
        }
        private global::System.String _PhoneNo;
        partial void OnPhoneNoChanging(global::System.String value);
        partial void OnPhoneNoChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFormLetterAllowed
        {
            get
            {
                return _IsFormLetterAllowed;
            }
            set
            {
                OnIsFormLetterAllowedChanging(value);
                ReportPropertyChanging("IsFormLetterAllowed");
                _IsFormLetterAllowed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFormLetterAllowed");
                OnIsFormLetterAllowedChanged();
            }
        }
        private global::System.Boolean _IsFormLetterAllowed;
        partial void OnIsFormLetterAllowedChanging(global::System.Boolean value);
        partial void OnIsFormLetterAllowedChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "TeamTitle", "Title")]
        public Title Title
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TafelModel.TeamTitle", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TafelModel.TeamTitle", "Title").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> TitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("TafelModel.TeamTitle", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("TafelModel.TeamTitle", "Title", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "TeamFunctionTeam", "TeamFunction")]
        public TeamFunction TeamFunction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamFunction>("TafelModel.TeamFunctionTeam", "TeamFunction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamFunction>("TafelModel.TeamFunctionTeam", "TeamFunction").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TeamFunction> TeamFunctionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeamFunction>("TafelModel.TeamFunctionTeam", "TeamFunction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TeamFunction>("TafelModel.TeamFunctionTeam", "TeamFunction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="TeamFunction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamFunction : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues TeamFunction-Objekt.
        /// </summary>
        /// <param name="teamFunctionID">Anfangswert der Eigenschaft TeamFunctionID.</param>
        /// <param name="name">Anfangswert der Eigenschaft Name.</param>
        public static TeamFunction CreateTeamFunction(global::System.Int32 teamFunctionID, global::System.String name)
        {
            TeamFunction teamFunction = new TeamFunction();
            teamFunction.TeamFunctionID = teamFunctionID;
            teamFunction.Name = name;
            return teamFunction;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamFunctionID
        {
            get
            {
                return _TeamFunctionID;
            }
            set
            {
                if (_TeamFunctionID != value)
                {
                    OnTeamFunctionIDChanging(value);
                    ReportPropertyChanging("TeamFunctionID");
                    _TeamFunctionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeamFunctionID");
                    OnTeamFunctionIDChanged();
                }
            }
        }
        private global::System.Int32 _TeamFunctionID;
        partial void OnTeamFunctionIDChanging(global::System.Int32 value);
        partial void OnTeamFunctionIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "TeamFunctionTeam", "Team")]
        public EntityCollection<Team> Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("TafelModel.TeamFunctionTeam", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("TafelModel.TeamFunctionTeam", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="Title")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Title : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Title-Objekt.
        /// </summary>
        /// <param name="titleID">Anfangswert der Eigenschaft TitleID.</param>
        /// <param name="name">Anfangswert der Eigenschaft Name.</param>
        public static Title CreateTitle(global::System.Int32 titleID, global::System.String name)
        {
            Title title = new Title();
            title.TitleID = titleID;
            title.Name = name;
            return title;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleID
        {
            get
            {
                return _TitleID;
            }
            set
            {
                if (_TitleID != value)
                {
                    OnTitleIDChanging(value);
                    ReportPropertyChanging("TitleID");
                    _TitleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TitleID");
                    OnTitleIDChanged();
                }
            }
        }
        private global::System.Int32 _TitleID;
        partial void OnTitleIDChanging(global::System.Int32 value);
        partial void OnTitleIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "PersonTitle", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("TafelModel.PersonTitle", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("TafelModel.PersonTitle", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "TeamTitle", "Team")]
        public EntityCollection<Team> Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("TafelModel.TeamTitle", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("TafelModel.TeamTitle", "Team", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "TitleSponsor", "Sponsor")]
        public EntityCollection<Sponsor> Sponsor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sponsor>("TafelModel.TitleSponsor", "Sponsor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sponsor>("TafelModel.TitleSponsor", "Sponsor", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "TitlePerson", "Person")]
        public EntityCollection<Person> Person_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("TafelModel.TitlePerson", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("TafelModel.TitlePerson", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TafelModel", Name="UserAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccount : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues UserAccount-Objekt.
        /// </summary>
        /// <param name="userAccountID">Anfangswert der Eigenschaft UserAccountID.</param>
        /// <param name="username">Anfangswert der Eigenschaft Username.</param>
        /// <param name="password">Anfangswert der Eigenschaft Password.</param>
        /// <param name="isActive">Anfangswert der Eigenschaft IsActive.</param>
        public static UserAccount CreateUserAccount(global::System.Int32 userAccountID, global::System.String username, global::System.String password, global::System.Boolean isActive)
        {
            UserAccount userAccount = new UserAccount();
            userAccount.UserAccountID = userAccountID;
            userAccount.Username = username;
            userAccount.Password = password;
            userAccount.IsActive = isActive;
            return userAccount;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserAccountID
        {
            get
            {
                return _UserAccountID;
            }
            set
            {
                if (_UserAccountID != value)
                {
                    OnUserAccountIDChanging(value);
                    ReportPropertyChanging("UserAccountID");
                    _UserAccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserAccountID");
                    OnUserAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _UserAccountID;
        partial void OnUserAccountIDChanging(global::System.Int32 value);
        partial void OnUserAccountIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAdmin
        {
            get
            {
                return _IsAdmin;
            }
            set
            {
                OnIsAdminChanging(value);
                ReportPropertyChanging("IsAdmin");
                _IsAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAdmin");
                OnIsAdminChanged();
            }
        }
        private global::System.Boolean _IsAdmin = false;
        partial void OnIsAdminChanging(global::System.Boolean value);
        partial void OnIsAdminChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageName
        {
            get
            {
                return _ImageName;
            }
            set
            {
                OnImageNameChanging(value);
                ReportPropertyChanging("ImageName");
                _ImageName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageName");
                OnImageNameChanged();
            }
        }
        private global::System.String _ImageName;
        partial void OnImageNameChanging(global::System.String value);
        partial void OnImageNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "UserAccountPerson", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("TafelModel.UserAccountPerson", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("TafelModel.UserAccountPerson", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "UserAccountBooking", "Booking")]
        public EntityCollection<Booking> Booking
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Booking>("TafelModel.UserAccountBooking", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Booking>("TafelModel.UserAccountBooking", "Booking", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "UserAccountCashClosure", "CashClosure")]
        public EntityCollection<CashClosure> CashClosure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CashClosure>("TafelModel.UserAccountCashClosure", "CashClosure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CashClosure>("TafelModel.UserAccountCashClosure", "CashClosure", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "UserAccountCashClosureReport", "CashClosureReport")]
        public EntityCollection<CashClosureReport> CashClosureReport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CashClosureReport>("TafelModel.UserAccountCashClosureReport", "CashClosureReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CashClosureReport>("TafelModel.UserAccountCashClosureReport", "CashClosureReport", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "UserAccountCashClosureReport1", "CashClosureReport")]
        public EntityCollection<CashClosureReport> CashClosureReport_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CashClosureReport>("TafelModel.UserAccountCashClosureReport1", "CashClosureReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CashClosureReport>("TafelModel.UserAccountCashClosureReport1", "CashClosureReport", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TafelModel", "UserAccountCashClosureReceipt", "CashClosureReceipt")]
        public EntityCollection<CashClosureReceipt> CashClosureReceipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CashClosureReceipt>("TafelModel.UserAccountCashClosureReceipt", "CashClosureReceipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CashClosureReceipt>("TafelModel.UserAccountCashClosureReceipt", "CashClosureReceipt", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
